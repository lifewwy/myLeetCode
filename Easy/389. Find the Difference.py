# Given two strings s and t which consist of only lowercase letters.
#
# String t is generated by random shuffling string s and then add one more letter at a random position.
#
# Find the letter that was added in t.
#
# Example:
#
# Input:
# s = "abcd"
# t = "abcde"
#
# Output:
# e
#
# Explanation:
# 'e' is the letter that was added.

import collections
import operator
from functools import reduce

class Solution:
    def findTheDifference(self, s, t):
        """
        :type s: str
        :type t: str
        :rtype: str
        """
        lt = list(t)

        for c in s:
            lt.remove(c)

        return lt[0]

    def findTheDifference2(self, s, t):
        return list((collections.Counter(t) - collections.Counter(s)))[0]

    def findTheDifference3(self, s, t):
        return chr(reduce(operator.xor, map(ord, s + t)))

    def findTheDifference4(self, s, t):
        s, t = sorted(s), sorted(t)
        # 排序后，
        # 1.要找的字母在最后一个位置，或者
        # 2.在相同位置上第一个不同的字母即为要找的字母，
        #   'abkz'
        #   'abekz'
        return t[-1] if s == t[:-1] else [x[1] for x in zip(s, t) if x[0] != x[1]][0]


print(Solution().findTheDifference('abcd','dbace'))
print(Solution().findTheDifference2('abcd','dbace'))
print(Solution().findTheDifference3('abcd','dbace'))
print(Solution().findTheDifference4('abcd','dbace'))





















































